#include <iostream>

using namespace std;

class Node {
public:
	int data;
	Node* next;
	Node(int data):data(data),next(nullptr){}
};

class stackLinkedList {
	Node* top;
public:
	stackLinkedList():top(nullptr){}

	bool isempty() {
		return (top == nullptr);
	}

	void push(int data) {
		Node* newnode = new Node(data);
		newnode->next = top;
		top = newnode;
	}

	void pop() {
		if (isempty()) {
			cout << "The list is empty" << endl;
			return;
		}
		Node* temp = top;
		top = top->next;
		delete temp;
	}

	int  peek() {
		if (isempty()) {
			if (isempty()) {
				cout << "The list is empty" << endl;
				return -1;
			}
		}
		return top->data;
	}


};



int main() {
	stackLinkedList mystack;
	mystack.push(3);
	mystack.push(2);
	mystack.push(1);

	cout << "The top element is " << mystack.peek() << endl;

	mystack.pop();
	mystack.pop();
	
	cout << "The top element is " << mystack.peek() << endl;
	return 0;
}
