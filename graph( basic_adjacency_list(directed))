#include <iostream>
#include <list>

using namespace std;


template <typename T>
class Graph {
	int V;
	list<T>* adj;
public:
	Graph() {
		V = 0;
		adj = nullptr;
	}

	Graph(int vertices) :V(vertices) {
		adj = new list<T>[V];
	}

	void addEdge(int v, int w) {
		adj[v].push_back(w);
		adj[w].push_back(v);
	}

	void print() {
		for (int i = 0; i < V; i++) {
			cout << "Adjacency list for vertex " << i << ": ";
			for (const auto& value : adj[i]) {
				cout << value << " ";
			}
			cout << endl;
		}
	}
};

int main() {
	Graph<int> g1;
	g1.print();

	Graph<int> g2(4);
	g2.addEdge(2, 3);
	g2.addEdge(0, 2);
	g2.addEdge(1, 2);
	g2.print();

	return 0;
}
